<!DOCTYPE html>
<html lang="en" dir="ltr">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>Woody's Tuesday Night Trivia</title>
        <!--<link href="/styles/index_styles.css" rel="stylesheet" type="text/css"/>-->
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
        <style>
            body {
                max-width: 100%; overflow-x: hidden; 
            }
            .row {
                height: 10vh;
            }
            .row1 {
                margin-top: 20vh;
            }
            #mySelect {
                width: 80%;
                height: 40px;
            }
            .subTeam {
                margin-top: -5px;
                margin-left: 2px;
            }
        </style>
    </head>
    <body>
            <nav class="navbar fixed-top navbar-light bg-light">
                <button class="retrieve btn btn-outline-secondary">Pull Answers</button>
                <button type="submit" class="update btn btn-outline-secondary">Update Scores</button>
                <form class="reset_form" method="post" action="/reset">
                    <button type="submit" class="reset btn btn-outline-secondary">Reset Totals</button>
                </form>
                    <button type="submit" class="standings btn btn-outline-secondary">Show Standings</button>
                <form method="get" action="/">
                    <button type="submit" class="btn btn-outline-secondary"> <i class="bi bi-house"></i></button>
                </form>
                <form class="chat" method="post" action="/general_chat" target="_blank">
                    <button class="open_chat btn btn-outline-secondary" type="submit">Open Chat</button>
                    <input type="hidden" name="userName" value="Admin"/>
                </form>
              </nav>
        <div class="row"></div>
        <div class="row align-top">
            <div class="col-md-4">
            </div>
            <div class="col-md-4">
                <main class="answers"></main>
                <div class="results"></div>
            </div> 
        </div> 
        <div class="row row1">
            <div class="col-md-3"></div>
            <div class="col-md-6">
                <h3 id="intro">Welcome, admin! Would you like to Pull Answers, Reset Totals, Show Standings or Open Chat?</h3>
            </div>
        </div>       
        <script>
            const answers = document.querySelector('.answers');
            const retrieve = document.querySelector('.retrieve');
            const reset_form = document.querySelector('.reset_form');
            const reset = document.querySelector('.reset');
            const openChat = document.querySelector('.open_chat');
            const intro = document.getElementById('intro');
            const results = document.querySelector('.results');
            const standings = document.querySelector('.standings');
            const update = document.querySelector('.update');
            const selectList = document.createElement('select');
            selectList.id = 'mySelect';
            const btn = document.createElement('button');
            let teamInfo = [];
            

            const updateUI = async () => { 
                hide_intro(); hide_body();                
                const res = await fetch(`/get_qs`);
                try {
                    //form.classList.add('hide');
                    const resp = await res.text();
                    try {
                        let parsed = JSON.parse(resp);
                        let fragment = document.createDocumentFragment(); 
                        for(let x of parsed){
                            i=1;
                            let para = document.createElement('p');
                            para.innerText = `${x.question}: ${x.q} Correct: ${x.correct} A: ${x.option1} B: ${x.option2} C: ${x.option3} D: ${x.option4}`;
                            fragment.appendChild(para);
                            i++
                        }
                        answers.appendChild(fragment);
                    }
                    catch(err){
                        console.log(err);
                    }
                }
                catch(error){
                    console.log(error);
                }
            };

            const showStandings = async () => {
                hide_intro(); hide_body();                
                const res = await fetch(`/standings`);
                try {
                    //form.classList.add('hide');
                    const resp = await res.text();
                    try {
                        let parsed = JSON.parse(resp);
                        let fragment = document.createDocumentFragment();
                        for(let x of parsed){
                            let para = document.createElement('p');
                            para.innerText = `${x.teamName} - Points: ${x.runningTotal} Last Question Answered: ${x.lastQuestionAnswered}`;
                            fragment.appendChild(para);
                        }
                        results.appendChild(fragment);
                    }
                    catch(err){
                        console.log(err);
                    }
                }
                catch(error){
                    console.log(error)
                }
            }

            const updateScores = async() => {
                hide_intro(); hide_body(); 
                const res = await fetch(`/standings`);
                try {
                    //form.classList.add('hide');
                    const resp = await res.text();
                    try {
                        teamInfo = JSON.parse(resp);
                        //let fragment = document.createDocumentFragment();
                        btn.setAttribute('type', 'submit');
                        btn.setAttribute('class', 'subTeam btn btn-outline-secondary');
                        btn.innerText = 'Pick Team';

                        selectList.innerHTML = '';
                        
                        for(let x of teamInfo){
                            let option = document.createElement('option');
                            option.value = teamInfo.indexOf(x);
                            option.text = x.teamName;
                            selectList.appendChild(option);
                        }
                        answers.appendChild(selectList);
                        answers.appendChild(btn);
                        
                    }
                    catch(err){
                        console.log(err);
                    }               
                }
                catch(error){
                    console.log(error);
                }

            }

            const selectTeam = () => {
                    let pickedTeam = mySelect.options[mySelect.selectedIndex].value;

                    console.log(pickedTeam);

                    answers.innerHTML = `
                    <h4>${teamInfo[pickedTeam].teamName}'s current score is ${teamInfo[pickedTeam].runningTotal}. How much you like to add or subtract from their score?</h4>
                            <form method="post" action="adjust_points" style="margin-top: 40px;">
                                <div style="display: inline-block;">
                                    <input type="number" style="height: 40px;" class="adjustPoints" name="points" min="-${teamInfo[pickedTeam].runningTotal}" max="${teamInfo[pickedTeam].runningTotal}">
                                    <input type="hidden" name="team" value="${teamInfo[pickedTeam].teamName}"/>
                                    <button class="btn btn-outline-secondary" style="height: 40px; margin-left: 10px; margin-top: -5px;" type="submit">Submit</button>
                                </div>
                            </form>
                    `;
            }

            const resetTotals = async(e) => {
                const re_set = confirm(`Are you sure you'd like to reset totals? If you confirm, all teams' logged-in users, running totals, final bets, last-question-answered values, and chats will reset to their original values.`);
                if(re_set){
                    reset_form.action = '/reset';
                }
                else {
                    e.preventDefault();
                }
            };

            const hide_intro = () => {
                intro.style.display = 'none';
            }
            const hide_body = () => {
                answers.innerHTML = '';
                results.innerHTML = '';
            };
/*
            const open_chat = async(e) => {
                window.open('/admin_chat', '_blank');
            };
*/
            retrieve.addEventListener('click', updateUI);
            reset.addEventListener('click', resetTotals);
            standings.addEventListener('click', showStandings);
            update.addEventListener('click', updateScores);
            btn.addEventListener('click', selectTeam);
            //openChat.addEventListener('click', open_chat);

        </script>
    
    </body>
    </html>